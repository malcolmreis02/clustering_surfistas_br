op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DEg[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
fnames <- list.files("surfistas/original/")
DE <- lapply(paste0("surfistas/original/", fnames), readImage)
DEMask <- lapply(paste0("surfistas/ci/", gsub(".jpg", "", fnames),
"_mask.jpg"), readImage)
DEg <- lapply(DE, function(x) channel(x, "gray"))
for(i in seq_along(DE)){
DEg[[i]]@.Data <- DEg[[i]]@.Data * DEMask[[i]]@.Data
}
layout(matrix(c(1:n, 0, 0), byrow=TRUE, ncol = 6))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DEg[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
fnames <- list.files("surfistas/original/")
DE <- lapply(paste0("surfistas/original/", fnames), readImage)
DEMask <- lapply(paste0("surfistas/ci/", gsub(".jpg", "", fnames),
"_mask.jpg"), readImage)
fnames <- list.files("surfistas/original/")
DE <- lapply(paste0("surfistas/original/", fnames), readImage)
DEMask <- lapply(paste0("surfistas/ci/", gsub(".jpg", "", fnames),
"_mask.jpg"), readImage)
DEMask <- lapply(paste0("surfistas/mask/", gsub(".jpg", "", fnames),
"_mask.jpg"), readImage)
DEg <- lapply(DE, function(x) channel(x, "gray"))
for(i in seq_along(DE)){
DEg[[i]]@.Data <- DEg[[i]]@.Data * DEMask[[i]]@.Data
}
layout(matrix(c(1:n, 0, 0), byrow=TRUE, ncol = 6))
n <- length(fnames)
layout(matrix(c(1:n, 0, 0), byrow=TRUE, ncol = 6))
layout(matrix(c(1:n, 0, 0), byrow=TRUE, ncol = n))
op <- par(mar = rep(0.1, n), oma = rep(0.1, 4))
layout(matrix(c(1:n, 0, 0), byrow=TRUE, ncol = 6))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DEg[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
fnames <- list.files("surfistas/original/")
n <- length(fnames)
DE <- lapply(paste0("surfistas/original/", fnames), readImage)
layout(matrix(c(1:n, 0, 0), byrow=TRUE, ncol = 6))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DE[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
layout(matrix(c(1:n, 0, 0), byrow=TRUE, ncol = n))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DE[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
layout(matrix(c(1:5, 0, 0), byrow=TRUE, ncol = n))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DE[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
layout(matrix(c(1:5, 0, 0), byrow=TRUE, ncol = 6))
layout(matrix(c(1:10, 0, 0), byrow=TRUE, ncol = 6))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DE[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
layout(matrix(c(1:9, 0, 0), byrow=TRUE, ncol = 6))
layout(matrix(c(1:10, 0, 0), byrow=TRUE, ncol = 6))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DE[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
par(op)
DEMask <- lapply(paste0("surfistas/mask/", gsub(".jpg", "", fnames),
"_mask.jpg"), readImage)
DEg <- lapply(DE, function(x) channel(x, "gray"))
for(i in seq_along(DE)){
DEg[[i]]@.Data <- DEg[[i]]@.Data * DEMask[[i]]@.Data
}
layout(matrix(c(1:10, 0, 0), byrow=TRUE, ncol = 6))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DEg[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
par(op)
matriz_fotos <- function(DE, n = length(fnames)) {
layout(matrix(c(1:10, 0, 0), byrow=TRUE, ncol = 6))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DE[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
par(op)
}
matriz_fotos(DEg)
for(i in seq_along(DEg)){
lines <- range(which(apply(DEg[[i]]@.Data, 1, sum) > 0))
columns <- range(which(apply(DEg[[i]]@.Data, 2, sum) > 0))
DEg[[i]] <- DEg[[i]][lines[1]:lines[2], columns[1]:columns[2]]
}
which.max(sapply(lapply(DEg, dim), prod))
(newDim <- dim(DEg[[which.max(sapply(lapply(DEg, dim), prod))]]))
DEg <- lapply(DEg, function(x) resize(x, newDim[1], newDim[2]))
matriz_fotos(DEg)
set.seed(123456)
setwd("~/R/projetos/me921_machine/t3_imagens")
rm(list = ls())
options(scipen = 999)
library(jpeg)
library(opencv)
library(EBImage)
matriz_fotos <- function(DE, n = length(fnames)) {
layout(matrix(c(1:10, 0, 0), byrow=TRUE, ncol = 6))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DE[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
par(op)
}
fnames <- list.files("surfistas/original/")
n <- length(fnames)
DE <- lapply(paste0("surfistas/original/", fnames), readImage)
matriz_fotos(DE)
for(i in seq_along(fnames)){
temp <- ocv_read(paste0("surfistas/", fnames[i]))
ocv_write(ocv_face(temp), paste0("surfistas/ci/",
gsub(".jpg", "", fnames[i]),
"_ci.jpg"))
tmask <- ocv_facemask(temp)
ocv_write(tmask, paste0("surfistas/mask/",
gsub(".jpg", "", fnames[i]),
"_mask.jpg"))
}
for(i in seq_along(fnames)){
temp <- ocv_read(paste0("surfistas/original/", fnames[i]))
ocv_write(ocv_face(temp), paste0("surfistas/ci/",
gsub(".jpg", "", fnames[i]),
"_ci.jpg"))
tmask <- ocv_facemask(temp)
ocv_write(tmask, paste0("surfistas/mask/",
gsub(".jpg", "", fnames[i]),
"_mask.jpg"))
}
DEMask <- lapply(paste0("surfistas/mask/", gsub(".jpg", "", fnames),
"_mask.jpg"), readImage)
DEg <- lapply(DE, function(x) channel(x, "gray"))
for(i in seq_along(DE)){
DEg[[i]]@.Data <- DEg[[i]]@.Data * DEMask[[i]]@.Data
}
matriz_fotos(DEg)
for(i in seq_along(DEg)){
lines <- range(which(apply(DEg[[i]]@.Data, 1, sum) > 0))
columns <- range(which(apply(DEg[[i]]@.Data, 2, sum) > 0))
DEg[[i]] <- DEg[[i]][lines[1]:lines[2], columns[1]:columns[2]]
}
which.max(sapply(lapply(DEg, dim), prod))
(newDim <- dim(DEg[[which.max(sapply(lapply(DEg, dim), prod))]]))
DEg <- lapply(DEg, function(x) resize(x, newDim[1], newDim[2]))
matriz_fotos(DEg)
DE.values <- sapply(DEg, function(x) as.numeric(x@.Data))
colnames(DE.values) <- gsub(".jpg", "", fnames)
ProfDist <- dist(t(DE.values)) # Quero clusterizar COLUNAS
model <- hclust(ProfDist, method = "average")
plot(model)
##### Limpeza do ambiente
set.seed(123456)
setwd("~/R/projetos/me921_machine/t3_imagens")
rm(list = ls())
options(scipen = 999)
#### Bibliotecas
library(jpeg)
library(opencv)
library(EBImage)
#### Funcoes que serao utilizadas
matriz_fotos <- function(DE, n = length(fnames)) {
layout(matrix(c(1:10, 0, 0), byrow=TRUE, ncol = 6))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DE[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
par(op)
}
#### Identificando as fotos
fnames <- list.files("surfistas/original/")
n <- length(fnames)
DE <- lapply(paste0("surfistas/original/", fnames), readImage)
matriz_fotos(DE)
#### Identificando os rostos de cada foto
for(i in seq_along(fnames)){
temp <- ocv_read(paste0("surfistas/original/", fnames[i]))
ocv_write(ocv_face(temp), paste0("surfistas/ci/",
gsub(".jpg", "", fnames[i]),
"_ci.jpg"))
tmask <- ocv_facemask(temp)
ocv_write(tmask, paste0("surfistas/mask/",
gsub(".jpg", "", fnames[i]),
"_mask.jpg"))
}
#### Tirando a cor
DEMask <- lapply(paste0("surfistas/mask/", gsub(".jpg", "", fnames),
"_mask.jpg"), readImage)
DEg <- lapply(DE, function(x) channel(x, "gray"))
for(i in seq_along(DE)){
DEg[[i]]@.Data <- DEg[[i]]@.Data * DEMask[[i]]@.Data
}
matriz_fotos(DEg)
#### Focando apenas nos rostos
for(i in seq_along(DEg)){
lines <- range(which(apply(DEg[[i]]@.Data, 1, sum) > 0))
columns <- range(which(apply(DEg[[i]]@.Data, 2, sum) > 0))
DEg[[i]] <- DEg[[i]][lines[1]:lines[2], columns[1]:columns[2]]
}
for(i in seq_along(DEg)){
lines <- range(which(apply(DEg[[i]]@.Data, 1, sum) > 0))
columns <- range(which(apply(DEg[[i]]@.Data, 2, sum) > 0))
DEg[[i]] <- DEg[[i]][lines[1]:lines[2], columns[1]:columns[2]]
}
which.max(sapply(lapply(DEg, dim), prod))
(newDim <- dim(DEg[[which.max(sapply(lapply(DEg, dim), prod))]]))
DEg <- lapply(DEg, function(x) resize(x, newDim[1], newDim[2]))
matriz_fotos(DEg)
DE.values <- sapply(DEg, function(x) as.numeric(x@.Data))
colnames(DE.values) <- gsub(".jpg", "", fnames)
ProfDist <- dist(t(DE.values)) # Quero clusterizar COLUNAS
model <- hclust(ProfDist, method = "average")
plot(model)
matriz_fotos(DEg)
DEMask <- lapply(paste0("surfistas/mask/", gsub(".jpg", "", fnames),
"_mask.jpg"), readImage)
DEg <- lapply(DE, function(x) channel(x, "gray"))
for(i in seq_along(DE)){
DEg[[i]]@.Data <- DEg[[i]]@.Data * DEMask[[i]]@.Data
}
matriz_fotos(DEg)
DEMask <- lapply(paste0("surfistas/mask/", gsub(".jpg", "", fnames),
"_mask.jpg"), readImage)
DEg <- lapply(DE, function(x) channel(x, "gray"))
for(i in seq_along(DE)){
DEg[[i]]@.Data <- DEg[[i]]@.Data * DEMask[[i]]@.Data
}
matriz_fotos(DEg)
matriz_fotos(DE)
##### Limpeza do ambiente
set.seed(123456)
setwd("~/R/projetos/me921_machine/t3_imagens")
rm(list = ls())
options(scipen = 999)
#### Bibliotecas
library(jpeg)
library(opencv)
library(EBImage)
#### Funcoes que serao utilizadas
matriz_fotos <- function(DE, n = length(fnames)) {
layout(matrix(c(1:10, 0, 0), byrow=TRUE, ncol = 6))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DE[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
par(op)
}
#### Identificando as fotos
fnames <- list.files("surfistas/original/")
n <- length(fnames)
DE <- lapply(paste0("surfistas/original/", fnames), readImage)
matriz_fotos(DE)
#### Identificando os rostos de cada foto
for(i in seq_along(fnames)){
temp <- ocv_read(paste0("surfistas/original/", fnames[i]))
ocv_write(ocv_face(temp), paste0("surfistas/ci/",
gsub(".jpg", "", fnames[i]),
"_ci.jpg"))
tmask <- ocv_facemask(temp)
ocv_write(tmask, paste0("surfistas/mask/",
gsub(".jpg", "", fnames[i]),
"_mask.jpg"))
}
#### Tirando a cor
DEMask <- lapply(paste0("surfistas/mask/", gsub(".jpg", "", fnames),
"_mask.jpg"), readImage)
DEg <- lapply(DE, function(x) channel(x, "gray"))
for(i in seq_along(DE)){
DEg[[i]]@.Data <- DEg[[i]]@.Data * DEMask[[i]]@.Data
}
matriz_fotos(DEg)
#### Focando apenas nos rostos
for(i in seq_along(DEg)){
lines <- range(which(apply(DEg[[i]]@.Data, 1, sum) > 0))
columns <- range(which(apply(DEg[[i]]@.Data, 2, sum) > 0))
DEg[[i]] <- DEg[[i]][lines[1]:lines[2], columns[1]:columns[2]]
}
which.max(sapply(lapply(DEg, dim), prod))
(newDim <- dim(DEg[[which.max(sapply(lapply(DEg, dim), prod))]]))
DEg <- lapply(DEg, function(x) resize(x, newDim[1], newDim[2]))
matriz_fotos(DEg)
##### Clusterizando
DE.values <- sapply(DEg, function(x) as.numeric(x@.Data))
colnames(DE.values) <- gsub(".jpg", "", fnames)
ProfDist <- dist(t(DE.values)) # Quero clusterizar COLUNAS
model <- hclust(ProfDist, method = "average")
plot(model)
model <- hclust(ProfDist, method = "complete")
plot(model)
model <- hclust(ProfDist, method = "average")
plot(model)
plot(model)
model
ProfDist
DE.values
t(DE.values)
ProfDist
library(cluster)
library(factoextra)
DE.values
?fviz_nbclust
fviz_nbclust(t(DE.values), kmeans, "wss")
names(t(DE.values))
fviz_nbclust(DE.values, kmeans, method = "gap_stat")
fviz_nbclust(DE.values, kmeans, method = "wss")
h <- seq(0, 30, by = 1) # definindo o espaco
h <- seq(0, 30, by = 1) # definindo o espaco
N <- nrow(t(DE.values))
N
totalVar <- numeric(length(h))
K <- numeric(length(h))
Y <- t(DE.values)
for(i in seq_along(h)){
groups <- factor(cutree(cluster, h = h[i]))
K[i] <- length(levels(groups))
s.manova <- summary(manova(Y ~ groups), tol = 0)
B <- s.manova$SS$groups
W <- s.manova$SS$Residuals
totalVar[i] <- det(B)/(det(B+W))
}
cluster <- hclust(ProfDist, method = "average")
plot(cluster)
h <- seq(0, 30, by = 1) # definindo o espaco
N <- nrow(t(DE.values))
totalVar <- numeric(length(h))
K <- numeric(length(h))
Y <- t(DE.values)
for(i in seq_along(h)){
groups <- factor(cutree(cluster, h = h[i]))
K[i] <- length(levels(groups))
s.manova <- summary(manova(Y ~ groups), tol = 0)
B <- s.manova$SS$groups
W <- s.manova$SS$Residuals
totalVar[i] <- det(B)/(det(B+W))
}
ggdendrogram(cluster)# +
library(ggdendro)
ggdendrogram(cluster)# +
dim(DE.values)
index <- sample.int(nrow(DE.values), 10000, replace = FALSE)
temp <- sapply(2:10, function(x) kmeans(DE.values[index, ], centers = x)$betweenss)
plot(2:10, temp, xlab = "") # Elbow ~ 6, mas sabemos 5 cores
temp <- sapply(2:15, function(x) kmeans(DE.values[index, ], centers = x)$betweenss)
plot(2:10, temp, xlab = "") # Elbow ~ 6, mas sabemos 5 cores
temp <- sapply(1:10, function(x) kmeans(DE.values[index, ], centers = x)$betweenss)
plot(2:10, temp, xlab = "") # Elbow ~ 6, mas sabemos 5 cores
plot(1:10, temp, xlab = "") # Elbow ~ 6, mas sabemos 5 cores
set.seed(123456)
index <- sample.int(nrow(DE.values), 10000, replace = FALSE)
temp <- sapply(1:10, function(x) kmeans(DE.values[index, ], centers = x)$betweenss)
plot(1:10, temp, xlab = "") # Elbow ~ 6, mas sabemos 5 cores
ggdendrogram(cluster)# +
ggdendrogram(cluster) +
geom_hline(yintercept = 100, col = "red") +
labs(title = "Dendograma do Cluster")
index <- sample.int(nrow(DE.values), 10000, replace = FALSE)
temp <- sapply(1:10, function(x) kmeans(DE.values[index, ], centers = x)$betweenss)
plot(1:10, temp, xlab = "") # Elbow ~ 6, mas sabemos 5 cores
temp <- sapply(2:10, function(x) kmeans(DE.values[index, ], centers = x)$betweenss)
plot(2:10, temp, xlab = "") # Elbow ~ 6, mas sabemos 5 cores
dim(DE.values)
dim(DE.values)[2]
n
temp <- sapply(2:n, function(x) kmeans(DE.values[index, ], centers = x)$betweenss)
plot(2:n, temp, xlab = "") # Elbow ~ 6, mas sabemos 5 cores
ggdendrogram(cluster) +
geom_hline(yintercept = 100, col = "red") +
labs(title = "Dendograma do Cluster")
ggdendrogram(cluster) +
geom_hline(yintercept = 85, col = "red") +
labs(title = "Dendograma do Cluster")
temp
plot(2:n, temp, xlab = "")
index
temp
data.frame(totalVar = temp, K = 2:n) %>%
ggplot() +
geom_point(aes(x = K, y = totalVar)) +
geom_vline(xintercept = 3, col = "red") +
theme_classic() +
labs(title = "Metodo de Elbow",
y = "Variancia Total")
data.frame(totalVar = temp, K = 1:n) %>%
ggplot() +
geom_point(aes(x = K, y = totalVar)) +
geom_vline(xintercept = 3, col = "red") +
theme_classic() +
labs(title = "Metodo de Elbow",
y = "Variancia Total")
temp <- sapply(1:n, function(x) kmeans(DE.values[index, ], centers = x)$betweenss)
plot(1:n, temp, xlab = "")
data.frame(totalVar = temp, K = 1:n) %>%
ggplot() +
geom_point(aes(x = K, y = totalVar)) +
geom_vline(xintercept = 3, col = "red") +
theme_classic() +
labs(title = "Metodo de Elbow",
y = "Variancia Total")
ggdendrogram(cluster) +
geom_hline(yintercept = 85, col = "red") +
labs(title = "Dendograma do Cluster")
groups <- cutree(cluster, h = 3)
groups
groups <- cutree(cluster, h = 85)
groups
plot(DE.values)
DE.values
ProfDist
ProfDist
ProfDist
ProfDist
##### Limpeza do ambiente
set.seed(123456)
setwd("~/R/projetos/me921_machine/t3_imagens")
rm(list = ls())
options(scipen = 999)
#### Bibliotecas
library(jpeg)
library(opencv)
library(EBImage)
library(ggdendro)
#### Funcoes que serao utilizadas
matriz_fotos <- function(DE, n = length(fnames)) {
layout(matrix(c(1:10, 0, 0), byrow=TRUE, ncol = 6))
op <- par(mar = rep(0.1, 4), oma = rep(0.1, 4))
for(i in 1:n){
plot(c(0,1), c(0,1), type = "n", axes=FALSE, xlab = "", ylab = "")
rasterImage(DE[[i]], xleft = 0, ybottom = 0, xright = 1, ytop = 1)
}
par(op)
}
#### Identificando as fotos
fnames <- list.files("surfistas/original/")
n <- length(fnames)
DE <- lapply(paste0("surfistas/original/", fnames), readImage)
matriz_fotos(DE)
#### Identificando os rostos de cada foto
for(i in seq_along(fnames)){
temp <- ocv_read(paste0("surfistas/original/", fnames[i]))
ocv_write(ocv_face(temp), paste0("surfistas/ci/",
gsub(".jpg", "", fnames[i]),
"_ci.jpg"))
tmask <- ocv_facemask(temp)
ocv_write(tmask, paste0("surfistas/mask/",
gsub(".jpg", "", fnames[i]),
"_mask.jpg"))
}
#### Tirando a cor
DEMask <- lapply(paste0("surfistas/mask/", gsub(".jpg", "", fnames),
"_mask.jpg"), readImage)
DEg <- lapply(DE, function(x) channel(x, "gray"))
for(i in seq_along(DE)){
DEg[[i]]@.Data <- DEg[[i]]@.Data * DEMask[[i]]@.Data
}
matriz_fotos(DEg)
#### Focando apenas nos rostos
for(i in seq_along(DEg)){
lines <- range(which(apply(DEg[[i]]@.Data, 1, sum) > 0))
columns <- range(which(apply(DEg[[i]]@.Data, 2, sum) > 0))
DEg[[i]] <- DEg[[i]][lines[1]:lines[2], columns[1]:columns[2]]
}
which.max(sapply(lapply(DEg, dim), prod))
(newDim <- dim(DEg[[which.max(sapply(lapply(DEg, dim), prod))]]))
DEg <- lapply(DEg, function(x) resize(x, newDim[1], newDim[2]))
matriz_fotos(DEg)
##### Clusterizando
DE.values <- sapply(DEg, function(x) as.numeric(x@.Data))
colnames(DE.values) <- gsub(".jpg", "", fnames)
ProfDist <- dist(t(DE.values))
cluster <- hclust(ProfDist, method = "average")
#### Numero de Clusters com Elbow
index <- sample.int(nrow(DE.values), 10000, replace = FALSE)
temp <- sapply(2:n, function(x) kmeans(DE.values[index, ], centers = x)$betweenss)
data.frame(totalVar = temp, K = 2:n) %>%
ggplot() +
geom_point(aes(x = K, y = totalVar)) +
geom_vline(xintercept = 3, col = "red") +
theme_classic() +
labs(title = "Metodo de Elbow",
y = "Variancia Total")
#### Clustering Hierarquico
ggdendrogram(cluster) +
geom_hline(yintercept = 85, col = "red") +
labs(title = "Dendograma do Cluster")
#### Identificando os grupos
groups <- cutree(cluster, h = 85)
DE.values
dim(DE.values)
